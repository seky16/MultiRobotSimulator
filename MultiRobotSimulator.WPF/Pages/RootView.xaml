<Window x:Class="MultiRobotSimulator.WPF.Pages.RootView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MultiRobotSimulator.WPF"
        xmlns:enums="clr-namespace:MultiRobotSimulator.Core.Enums;assembly=MultiRobotSimulator.Core"
        xmlns:pages="clr-namespace:MultiRobotSimulator.WPF.Pages"
        xmlns:s="https://github.com/canton7/Stylet"
        mc:Ignorable="d"
        Title="MultiRobotSimulator" Height="450" Width="800"
        WindowStartupLocation="CenterOwner">

    <Window.Resources>
        <ResourceDictionary>
            <local:EnumBooleanConverter x:Key="EnumBooleanConverter" />
        </ResourceDictionary>
    </Window.Resources>

    <DockPanel>
        <Menu DockPanel.Dock="Top" Panel.ZIndex="999">
            <MenuItem Header="File">
                <MenuItem Header="New..." Command="{s:Action FileNew}" IsCheckable="False"></MenuItem>
                <MenuItem Header="Open..." Command="{s:Action FileOpen}" IsCheckable="False"></MenuItem>
                <MenuItem Header="Save" Command="{s:Action FileSave}" IsEnabled="{Binding HasOpenTabs}" IsCheckable="False"></MenuItem>
                <MenuItem Header="Save as..." Command="{s:Action FileSaveAs}" IsEnabled="{Binding HasOpenTabs}" IsCheckable="False"></MenuItem>
            </MenuItem>
        </Menu>
        <Grid DockPanel.Dock="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="180"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <!-- COLUMN 0 -->
            <Grid>
                <TextBlock Grid.Column="0" Visibility="{Binding HasOpenTabs, Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}" VerticalAlignment="Center" HorizontalAlignment="Stretch" TextAlignment="Center">
                    <Hyperlink Click="{s:Action FileNew}">Create new</Hyperlink> or <Hyperlink Click="{s:Action FileOpen}">open existing</Hyperlink> map
                </TextBlock>
            </Grid>
            <Border Grid.Column="0">
                <TabControl ItemsSource="{Binding Items}" SelectedItem="{Binding ActiveItem}" Visibility="{Binding HasOpenTabs, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                    <TabControl.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding DisplayName}" ToolTip="{Binding FullPath}" />
                                <TextBlock Text="*" Visibility="{Binding HasChanges, Converter={x:Static s:BoolToVisibilityConverter.Instance}}" />
                                <Button Content="Ã—" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" ToolTip="Close"
                                    Padding="0" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="3 0 0 0" Command="{s:Action TabClose}" CommandParameter="{Binding Id}" />
                            </StackPanel>
                        </DataTemplate>
                    </TabControl.ItemTemplate>
                    <TabControl.ContentTemplate>
                        <DataTemplate>
                            <ContentControl s:View.Model="{Binding}" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" IsTabStop="False" />
                        </DataTemplate>
                    </TabControl.ContentTemplate>
                </TabControl>
            </Border>

            <!-- COLUMN 1 -->
            <Border Grid.Column="1" BorderThickness="3" BorderBrush="Gray" Width="180" Background="Gray" Panel.ZIndex="999">
                <TabControl>
                    <TabItem Header="Editor">
                        <Border BorderThickness="5" BorderBrush="Transparent">
                            <WrapPanel Orientation="Vertical" IsEnabled="{Binding HasOpenTabs}">
                                <Button Command="{s:Action EditorClearAll}">Clear all</Button>
                                <Border BorderThickness="3" BorderBrush="Transparent" />
                                <Button Command="{s:Action EditorClearRobots}">Clear robots</Button>
                                <Border BorderThickness="3" BorderBrush="Transparent" />
                                <GroupBox Header="Draw">
                                    <StackPanel>
                                        <RadioButton IsChecked="{Binding DrawingMode, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static enums:DrawingMode.Obstacle}}" Content="Obstacle" />
                                        <RadioButton IsChecked="{Binding DrawingMode, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static enums:DrawingMode.Start}}" Content="Start" />
                                        <RadioButton IsChecked="{Binding DrawingMode, Converter={StaticResource EnumBooleanConverter}, ConverterParameter={x:Static enums:DrawingMode.Target}}" Content="Target" />
                                    </StackPanel>
                                </GroupBox>
                                <Border BorderThickness="3" BorderBrush="Transparent" />
                                <CheckBox IsChecked="{Binding RenderGraph}">Render graph</CheckBox>
                            </WrapPanel>
                        </Border>
                    </TabItem>
                    <TabItem Header="Search">
                        <StackPanel Orientation="Vertical"  IsEnabled="{Binding HasOpenTabs}">
                            <ComboBox Margin="4" ItemsSource="{Binding Algos}" DisplayMemberPath="Value" SelectedValuePath="Key" SelectedValue="{Binding SelectedAlgo, Mode=TwoWay}"></ComboBox>
                            <Button Margin="4" Click="{s:Action RunSearch}">Run search</Button>
                            <GroupBox Header="Results" Visibility="{Binding HasAlgoResult, Converter={x:Static s:BoolToVisibilityConverter.Instance}}" IsEnabled="{Binding HasAlgoResult}">
                                <StackPanel>
                                    <CheckBox IsChecked="{Binding RenderPaths}">Render paths</CheckBox>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Margin="2">Found paths:</TextBlock>
                                        <TextBlock Margin="2" DataContext="{Binding AlgoResult}" Text="{Binding Path=Successful}" />
                                        <TextBlock Margin="2">/</TextBlock>
                                        <TextBlock Margin="2" DataContext="{Binding AlgoResult}" Text="{Binding Path=Robots.Count}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Margin="2">Init time:</TextBlock>
                                        <TextBlock Margin="2" DataContext="{Binding AlgoResult}" Text="{Binding Path=InitTime, StringFormat=N2}" />
                                        <TextBlock Margin="2">ms</TextBlock>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Margin="2">Search time:</TextBlock>
                                        <TextBlock Margin="2" DataContext="{Binding AlgoResult}" Text="{Binding Path=SearchTime, StringFormat=N2}" />
                                        <TextBlock Margin="2">ms</TextBlock>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Margin="2">Shortest path length:</TextBlock>
                                        <TextBlock Margin="2" DataContext="{Binding AlgoResult}" Text="{Binding Path=ShortestPathLength, StringFormat=N2}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Margin="2">Average path length:</TextBlock>
                                        <TextBlock Margin="2" DataContext="{Binding AlgoResult}" Text="{Binding Path=AveragePathLength, StringFormat=N2}" />
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </TabItem>
                </TabControl>
            </Border>
        </Grid>
    </DockPanel>
</Window>